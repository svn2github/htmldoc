// generated by Fast Light User Interface Designer (fluid) version 1.00

#ifndef FileChooser_h
#define FileChooser_h
#include "CheckButton.h"
#include "FileBrowser.h"
#include <FL/Fl.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Window.H>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

class FileChooser {
public:
  enum { TYPE_HTML, TYPE_IMAGE };
  FileChooser(const char *d, int t, int m, const char *title);
private:
  Fl_Window *window;
  Fl_Choice *dirHistory;
  FileBrowser *fileList;
  inline void cb_fileList_i(FileBrowser*, void*);
  static void cb_fileList(FileBrowser*, void*);
  Fl_Button *prevDir;
  inline void cb_prevDir_i(Fl_Button*, void*);
  static void cb_prevDir(Fl_Button*, void*);
  Fl_Button *newDir;
  inline void cb_newDir_i(Fl_Button*, void*);
  static void cb_newDir(Fl_Button*, void*);
  Fl_Input *fileName;
  CheckButton *followLinks;
  inline void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
  inline void cb_OK_i(Fl_Return_Button*, void*);
  static void cb_OK(Fl_Return_Button*, void*);
  char directory_[1024];
public:
  void directory(const char *d);
  char * directory();
private:
  int multi_;
public:
  void multi(int m);
  int multi();
private:
  int ok_;
public:
  int ok();
private:
  int type_;
public:
  void type(int t);
  int type();
  void value(const char *v);
  const char * value();
  void show();
  void hide();
  int visible();
private:
  void init_symbols();
  void new_directory();
public:
  void rescan();
private:
  void fileListCB(Fl_Widget *, void *);
};
#endif
