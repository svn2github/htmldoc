// generated by Fast Light User Interface Designer (fluid) version 1.00

#ifndef FileChooser_h
#define FileChooser_h
#include "CheckButton.h"
#include "FileBrowser.h"
#include <FL/Fl.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Roller.H>
#include <FL/Fl_Window.H>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

class FileChooser {
public:
  enum { TYPE_MULTI = 1, TYPE_FOLLOW = 2 };
  FileChooser(const char *d, char *p, int t, const char *title);
private:
  Fl_Window *window;
  FileBrowser *fileList;
  inline void cb_fileList_i(FileBrowser*, void*);
  static void cb_fileList(FileBrowser*, void*);
  CheckButton *followLinks;
  inline void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
  inline void cb_OK_i(Fl_Return_Button*, void*);
  static void cb_OK(Fl_Return_Button*, void*);
public:
  Fl_Roller *roller;
private:
  inline void cb_roller_i(Fl_Roller*, void*);
  static void cb_roller(Fl_Roller*, void*);
public:
  Fl_Button *upButton;
private:
  inline void cb_upButton_i(Fl_Button*, void*);
  static void cb_upButton(Fl_Button*, void*);
  inline void cb_reset_i(Fl_Button*, void*);
  static void cb_reset(Fl_Button*, void*);
public:
  Fl_Input *fileName;
private:
  inline void cb_fileName_i(Fl_Input*, void*);
  static void cb_fileName(Fl_Input*, void*);
  inline void cb_a_i(Fl_Button*, void*);
  static void cb_a(Fl_Button*, void*);
  char directory_[1024];
  int type_;
  void fileListCB();
  void fileNameCB();
  void init_symbols();
public:
  void rescan();
private:
  void up();
public:
  int count();
  void directory(const char *d);
  char * directory();
  void filter(const char *p);
  const char * filter();
  void follow_links(int f);
  int follow_links();
  void hide();
  void multi(int m);
  int multi();
  void show();
  const char *value(int f);
  int visible();
};
#endif
