// generated by Fast Light User Interface Designer (fluid) version 1.00

#ifndef FileChooser_h
#define FileChooser_h
#include "FileBrowser.h"
#include <FL/Fl.H>
#include <FL/Fl_Button.H>
#include <FL/Fl_Choice.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Return_Button.H>
#include <FL/Fl_Window.H>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

class FileChooser {
public:
  FileChooser(const char *d, char *p, int m, const char *title);
private:
  Fl_Window *window;
  FileBrowser *fileList;
  inline void cb_fileList_i(FileBrowser*, void*);
  static void cb_fileList(FileBrowser*, void*);
  inline void cb_Cancel_i(Fl_Button*, void*);
  static void cb_Cancel(Fl_Button*, void*);
  inline void cb_OK_i(Fl_Return_Button*, void*);
  static void cb_OK(Fl_Return_Button*, void*);
public:
  Fl_Input *fileName;
private:
  inline void cb_fileName_i(Fl_Input*, void*);
  static void cb_fileName(Fl_Input*, void*);
public:
  Fl_Button *upButton;
private:
  inline void cb_upButton_i(Fl_Button*, void*);
  static void cb_upButton(Fl_Button*, void*);
  inline void cb_new_i(Fl_Button*, void*);
  static void cb_new(Fl_Button*, void*);
public:
  Fl_Choice *dirMenu;
private:
  inline void cb_dirMenu_i(Fl_Choice*, void*);
  static void cb_dirMenu(Fl_Choice*, void*);
  inline void cb_allfiles_i(Fl_Button*, void*);
  static void cb_allfiles(Fl_Button*, void*);
  char directory_[1024];
  int multi_;
  void fileListCB();
  void fileNameCB();
  void init_icons();
  void newdir();
public:
  void rescan();
private:
  void up();
public:
  void color(Fl_Color c);
  int count();
private:
  void directory(const char *d);
public:
  char * directory();
  void filter(const char *p);
  const char * filter();
  void hide();
  void multi(int m);
  int multi();
  void show();
  const char *value(int f);
  int visible();
  void label(const char *l);
};
#endif
